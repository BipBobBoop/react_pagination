{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","className","classNames","disabled","href","onClick","Array","from","length","_","index","map","pageNumber","active","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","startItem","endItem","min","id","value","onChange","event","selectOptionValue","Number","target","htmlFor","page","slice","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAkBxC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAA0B,IAAhBP,IADZ,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QA3Be,WACjBT,EAAc,GAChBC,EAAaD,EAAc,IAoBzB,oBAWDU,MAAMC,KAAK,CAAEC,OAAQV,IAAiB,SAACW,EAAGC,GAAJ,OAAcA,EAAQ,KAC1DC,KAAI,SAAAC,GACH,OACE,oBACEX,UAAWC,IAAW,YAAa,CACjCW,OAAQD,IAAehB,IAF3B,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMQ,GACVP,QAAS,WAjCrBR,EAiC2Ce,IAJjC,SAMGA,KAREA,MAab,oBAAIX,UAAWC,IAAW,YAAa,CACrCC,SAAUP,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAC/BO,QAxDe,WACjBT,EAAcE,GAChBD,EAAaD,EAAc,IAiDzB,wBCtEFkB,ECLC,SAAoBP,EAAcQ,GAGvC,IAFA,IAAMC,EAAoB,GAEjBC,EAAIV,EAAMU,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB2B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB2B,EAApB,KACM7B,EAAQoB,EAAMN,OACdgB,GAAa5B,EAAc,GAAKD,EAAU,EAC1C8B,EAAU1B,KAAK2B,IAAIF,EAAY7B,EAAU,EAAGD,GAOlD,OACE,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiC4B,EADjC,cACgDC,EADhD,eAC8D/B,EAD9D,OAIA,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOjC,EACPkC,SAAU,SACRC,GADQ,OApBGC,EAsBMC,OAAOF,EAAMG,OAAOL,OArB/CN,EAAWS,QACXR,EAAe,GAFjB,IAAuBQ,GAef,UASE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOM,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEP,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACsC,GAAD,OAAUZ,EAAeY,MAEzC,6BACGrB,EAAMsB,MAAMZ,EAAY,EAAGC,GAASd,KAAI,SAAC0B,GACxC,OAAO,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEvDzCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.751d2dd0.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const amountOfPages = Math.ceil(total / perPage);\n\n  const handlePrevPage = (): void => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = (): void => {\n    if (currentPage < amountOfPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePageClick = (page: number): void => {\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {Array.from({ length: amountOfPages }, (_, index) => index + 1)\n        .map(pageNumber => {\n          return (\n            <li\n              className={classNames('page-item', {\n                active: pageNumber === currentPage,\n              })}\n              key={pageNumber}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${pageNumber}`}\n                onClick={() => handlePageClick(pageNumber)}\n              >\n                {pageNumber}\n              </a>\n            </li>\n          );\n        })}\n      <li className={classNames('page-item', {\n        disabled: currentPage === amountOfPages,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === amountOfPages}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const total = items.length;\n  const startItem = (currentPage - 1) * perPage + 1;\n  const endItem = Math.min(startItem + perPage - 1, total);\n\n  function selectHandler(selectOptionValue: number): void {\n    setPerPage(selectOptionValue);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(\n              event: React.ChangeEvent<HTMLSelectElement>,\n            ) => selectHandler(Number(event.target.value))}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      <ul>\n        {items.slice(startItem - 1, endItem).map((item: string) => {\n          return <li data-cy=\"item\" key={item}>{item}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers: number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}